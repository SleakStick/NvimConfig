--https://ejmastnak.com/tutorials/vim-latex/luasnip/
--is a great guide for this kind of stuff

local ls = require("luasnip")
local s = ls.snippet
local sn = ls.snippet_node
local t = ls.text_node
local i = ls.insert_node
local f = ls.function_node
local d = ls.dynamic_node
local fmt = require("luasnip.extras.fmt").fmt
local fmta = require("luasnip.extras.fmt").fmta
local rep = require("luasnip.extras").rep
 

return{

s(
  {-- Snippet parameters called "context"
    trig="mb",
    dscr="Mathbb environment for common sets",
    snippetType="autosnippet"
  },
  {
    t("\\mathbb{"),
    i(1),
    t("}"),
    }
),
s(
  {
    trig="mc",
    dscr="\\mathcal{}",
    snippetType="autosnippet",
  },
  {
    t("\\mathcal{"),
    i(1),
    t("}"),
    }
),
s(
  {
    trig="ita",
    dscr="Italic text environment",
    snippetType="autosnippet",
  },
  {t("\\textit{"),i(1),t("}"),i(2),}
),

s(
  {trig="itize",dscr="Itemize enviromnent",snippetType="autosnippet"},
  { t({"\\begin{itemize}", "\\item["}),
    i(1),
    t("]{"),
    i(2),
    t({"}","\\end{itemize}"}),
    }
  ),
s(
  {
    trig="item",
    dscr="\\item",
    snippetType="snippet",
    wordTrig=false,
  },
  {
      t("\\item["),
      i(1),
      t("]{"),
      i(2),
      t("}"),
  }
),
s(
  {
    trig="m",
    dscr="Inline math environment",
  },
  {
    t("$"),
    i(1),
    t("$"),
    }
),

s(
  {
    trig="M",
    dscr="Unmarked equation",
  },
  {
    t("\\["),
    i(1),
    t("\\]"),
    }
),
s(
  {
    trig="nlem",
    dscr="New lemma",
    snippetType="autosnippet",
  },
  {
    t("\\lemma{"),
    i(1),
    t("}"),
    }
),
s(
  {
    trig="nsat",
    dscr="New satz",
    snippetType="autosnippet",
  },
  {
    t("\\satz{"),
    i(1),
    t("}"),
    }
),

s(
  {
    trig="nbew",
    dscr="New Beweis",
    snippetType="autosnippet",
  },
  {
    t("\\beweis"),
  }
),
s(
  {
    trig="ff",
    dscr="fraction",
    snippetType="autosnippet",
  },
  {
    t("\\frac{"),
    i(1),
    t("}{"),
    i(2),
    t("}"),
    }
),
s(
  {
    trig="pmat",
    dscr="New parantheses matrix",
    snippetType="autosnippet",
  },
  {
    t("\\begin{pmatrix}"),
    i(1),
    t("\\end{pmatrix}"),
    }
),

s(
  {
    trig="rar",
    dscr="\\rightarrow",
    snippetType="autosnippet",
  },
  {
    t("\\rightarrow"),
  }
),

s(
  {
    trig="Rar",
    dscr="\\Rightarrow",
    snippetType="autosnippet",
  },
  {
    t("\\Rightarrow"),
  }
),
s(
  {
    trig="bf",
    dscr="\\textbf{}",
    snippetType="autosnippet",
  },
  {
    t("\\textbf{"),
    i(1),
    t("}"),
    }
),
s(
  {
    trig="veps",
    dscr="\\varepsilon",
    snippetType="autosnippet",
  },
  {
    t("\\varepsilon"),
  }
),
s(
  {
    trig="d",
    dscr="\\delta",
    snippetType="snippet",
    wordTrig=false,
  },
  {
    t("\\delta"),
  }
),
s(
  {
    trig="int",
    dscr="Integral snippet",
    snippetType="snippet",
    wordTrig=false,
  },
  {
    t("\\int^{"),
    i(1),
    t("}_{"),
    i(2),
    t("}"),
    i(3),
    t("\\text{d}"),
    }
),
s(
  {
    trig="ndef",
    dscr="\\definition{}",
    snippetType="autosnippet",
  },
  {
    t("\\definition{"),
    i(1),
    t("}"),
    }
),
s(
  {
    trig="mucol",
    dscr="Multicols environment",
    snippetType="autosnippet",
  },
  {
    t("\\begin{multicols}{"),
    i(1),
    t({"}", ""}),
    i(2),
    t("\\end{multicols}"),
    }
),
s(
  {
    trig="txt",
    dscr="\\text{}",
    snippetType="autosnippet",
  },
  {
    t("\\text{"),
    i(1),
    t("}"),
    }
),

s(
  {
    trig="vc",
    dscr="\\vec{}",
    snippetType="autosnippet",
  },
  {
    t("\\vec{"),
    i(1),
    t("}"),
    }
),
s(
  {
    trig="IP",
    dscr="IP raum",
    snippetType="snippet",
    wordTrig=false,
  },
  {
    t("Sei $(V,<\\cdot,\\cdot>)$ ein IP-Raum "),
  }
),

s(
  {
    trig="LRar",
    dscr="\\Longrightarrow",
    snippetType="autosnippet",
  },
  {
    t("\\Longrightarrow"),
  }
),

s(
  {
    trig="Lar",
    dscr="\\Leftarrow",
    snippetType="autosnippet",
  },
  {
    t("\\Leftarrow"),
  }
),
s(
  {
    trig="lar",
    dscr="\\leftarro3",
    snippetType="autosnippet",
  },
  {
    t("\\leftarrow"),
  }
),
s(
  {
    trig="LeRar",
    dscr="",
    snippetType="autosnippet",
  },
  {
    t("\\Leftrightarrow"),
  }
),
s(
  {
    trig="limfty",
    dscr="",
    snippetType="autosnippet",
  },
  {
    t("\\lim_{"),
    i(1),
    t("\\rightarrow\\infty}"),
    }
),
s(
  {
    trig="lim",
    dscr="\\lim_{\\rightarrow}",
    snippetType="snippet",
    wordTrig=false,
  },
  {
      t("\\lim_{"),
      i(1),
      t("}"),
      i(2),

  }
),
s(
  {
    trig="sum",
    dscr="\\sum",
    snippetType="snippet",
    wordTrig=false,
  },
  {
    t("\\sum_{"),
    i(1),
    t("}^{"),
    i(2),
    t("}"),
    }
),
s(
  {
    trig="fral",
    dscr="\\forall",
    snippetType="autosnippet",
  },
  {
    t("\\forall"),
  }
),
s(
  {
    trig="inf",
    dscr="\\infty",
    snippetType="autosnippet",
  },
  {
    t("\\infty"),
  }
),

s(
  {
    trig="cd",
    dscr="\\cdot",
    snippetType="autosnippet",
  },
  {
    t("\\cdot"),
  }
),
s(
  {
    trig="cds",
    dscr="\\cdots",
    snippetType="autosnippet",
  },
  {
    t("\\cdots"),
  }
),
s(
  {
    trig="circ",
    dscr="\\circ",
    snippetType="snippet",
    wordTrig=false,
  },
  {
    t("\\circ"),
  }
),
s(
  {
    trig="nmat",
    dscr="New matrix",
    snippetType="autosnippet",
  },
  {
    t("\\begin{matrix}"),
    i(1),
    t("\\end{matrix}"),
    }
),
s(
  {
    trig="sin",
    dscr="\\sin",
    snippetType="snippet",
    wordTrig=false,
  },
  {
    t("\\sin\\left("),
    i(1),
    t("\\right)"),
    }
),
s(
  {
    trig="cos",
    dscr="\\cos",
    snippetType="snippet",
    wordTrig=false,
  },
  {
    t("\\cos\\left("),
    i(1),
    t("\\right)"),
    }
),
s(
  {
    trig="sbs",
    dscr="",
    snippetType="autosnippet",
  },
  {
    t("\\subset"),
  }
),
s(
  {
    trig="sps",
    dscr="",
    snippetType="autosnippet",
  },
  {
    t("\\supset"),
  }
),
s(
  {
    trig="lbd",
    dscr="\\lambda",
    snippetType="autosnippet",
  },
  {
    t("\\lambda"),
  }
),
s(
  {
    trig="exs",
    dscr="\\exists",
    snippetType="autosnippet",
  },
  {
    t("\\exists"),
  }
),
s(
  {
    trig="tet",
    dscr="\\theta",
    snippetType="autosnippet",
  },
  {
    t("\\theta"),
  }
),
s(
  {
    trig="mc",
    dscr="\\mathcal{}",
    snippetType="autosnippet",
  },
  {
    t("\\mathcal{"),
    i(1),
    t("}"),
    }
),
s(
  {
    trig="brcs",
    dscr="\\left\\lbrace ... \\right \\rbrace",
    snippetType="autosnippet",
  },
  {
    t("\\left\\lbrace"),
    i(1),
    t("\\right\\rbrace"),
    }
),
s(
  {
    trig="ga",
    dscr="\\gamma",
    snippetType="snippet",
    wordTrig=false,
  },
  {
    t("\\gamma"),
  }
),
s(
  {
    trig="seimat",
    dscr="M_{n\\times n}(K)",
    snippetType="autosnippet",
  },
  {
    t("M_{"),
    i(1),
    t("\\times"),
    i(2),
    t("}("),
    i(3),
    t(")"),
    }
),
s(
  {
    trig="tld",
    dscr="\\tilde{}",
    snippetType="autosnippet",
  },
  {
    t("\\tilde{"),
    i(1),
    t("}"),
    }
),
s(
  {
    trig="D",
    dscr="\\Delta",
    snippetType="snippet",
    wordTrig=false,
  },
  {
    t("\\Delta"),
  }
),
s(
  {
    trig="B",
    dscr="\\Beta",
    snippetType="snippet",
    wordTrig=false,
  },
  {
    t("\\Beta"),
  }
),
s(
  {
    trig="nbem",
    dscr="\\bemerkung",
    snippetType="autosnippet",
  },
  {
    t("\\bemerkung{"),
    i(1),
    t("}"),
    }
),
s(
  {
    trig="nbes",
    dscr="\\beispiel{}",
    snippetType="autosnippet",
  },
  {
    t("\\beispiel{"),
    i(1),
    t("}"),
    }
),
s(
  {
    trig="Lrar",
    dscr="\\Leftrightarrow",
    snippetType="autosnippet",
  },
  {
    t("\\Leftrightarrow"),
  }
),
s(
  {
    trig="b",
    dscr="Brackets environment for easy access out of the bracket",
    snippetType="snippet",
    wordTrig=false,
    trigEngine= "ecma",
  },
  {
      t("{"),
      i(1),
      t("}"),
      }
),
s(
  {
    trig="nkor",
    dscr="\\korollar{}",
    snippetType="autosnippet",
  },
  {
      t("\\korollar{"),
      i(1),
      t("}"),
}
),
s(
  {
    trig="pti",
    dscr="\\partial",
    snippetType="autosnippet",
  },
  {
    t("\\partial"),
  }
),
s(
  {
    trig="Â£",
    dscr="Brackets for quick tabulation outside",
    snippetType="autosnippet",
    wordTrig=false,
  },
  {
    t("{"),
    i(1),
    t("}"),
    }
),s(
  {
    trig="RN",
      dscr="\\mathbb{R}^n",
    snippetType="autosnippet",
  },
  {
      t("\\mathbb{R}^n"),
  }
),
s(
  {
    trig="lrd",
    dscr="\\left_ \\right_",
    snippetType="autosnippet",
  },
  {
    t("\\left"), 
    i(1),
    t("\\right"),
    }
),

s(
  {
    trig="alp",
    dscr="\\alpha",
    snippetType="snippet",
    wordTrig=false,
  },
  {
    t("\\alpha"),
  }
),
s(
  {
    trig="bet",
    dscr="\\beta",
    snippetType="snippet",
    wordTrig=false,
  },
  {
    t("\\beta"),
  }
),
  s(
    {
      trig="vphi",
      dscr="\\varphi",
      snippetType="autosnippet",
    },
    {
      t("\\varphi"),
    }
  ),
s(
  {
    trig="phi",
    dscr="\\phi",
    snippetType="autosnippet",
  },
  {
    t("\\phi"),
  }
),
s(
  {
    trig="eta",
    dscr="\\eta",
    snippetType="snippet",
    wordTrig=false,
  },
  {
    t("\\eta"),
  }
),
s(
  {
    trig="uset",
    dscr="\\underset and \\underbrace environment",
    snippetType="autosnippet",
    wordTrig=true,
  },
  {
    t("\\underset{"),
    i(1),
    t("}{\\underbrace{"),
    i(2),
    t("}}"),
    }
),
s(
  {
    trig="psi",
    dscr="\\psi",
    snippetType="autosnippet",
    wordTrig=false,
  },
  {
    t("\\psi"),
  }
),
s(
  {
    trig="oline",
    dscr="\\overline{}",
    snippetType="autosnippet",
    wordTrig=false,
  },
  {
    t("\\overline{"),
    i(1),
    t("}"),
  }
),
s(
  {
    trig="bsy",
    dscr="\\boldsymbol",
    snippetType="autosnippet",
    wordTrig=false,
  },
  {
    t("\\boldsymbol{"),
    i(1),
    t("}"),
  }
),
s(
  {
    trig="nrm",
    dscr="\\norm",
    snippetType="autosnippet",
    wordTrig=false,
  },
  {
    t("\\norm{"),
    i(1),
    t("}")
  }
),
s(
  {
    trig="tms",
    dscr=" \\times",
    snippetType="autosnippet",
    wordTrig=true,
  },
  {
    t("\\times"),
  }
),
}
